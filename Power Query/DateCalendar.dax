let
    StartDate = #date(2020, 1, 1),
    EndDate = DateTimeZone.LocalNow(),
    #"Extracted Date" = Date.From(EndDate),
    DateList = List.Dates(StartDate, Duration.Days(#"Extracted Date" - StartDate) + 1, #duration(1,0,0,0)),
    #"LIST: Date" = Table.FromList(DateList, Splitter.SplitByNothing(), {"Date"}),
    #"COLUMN: DateInteger" = Table.DuplicateColumn(#"LIST: Date", "Date", "DateInteger"),
    #"COLUMN: Year" = Table.AddColumn(#"COLUMN: DateInteger", "Year", each Date.Year([Date])),
    #"COLUMN: Month" = Table.AddColumn(#"COLUMN: Year", "Month", each Date.Month([Date]), Int32.Type),
    #"COLUMN: Day" = Table.AddColumn(#"COLUMN: Month", "Day", each Date.Day([Date]), Int32.Type),
    #"COLUMN: Weekday" = Table.AddColumn(#"COLUMN: Day", "Weekday", each Date.DayOfWeek([Date])),
    #"COLUMN: MonthName" = Table.AddColumn(#"COLUMN: Weekday", "MonthName", each Date.ToText([Date], "MMMM"), type text),
    #"COLUMN: MonthNameShort" = Table.AddColumn(#"COLUMN: MonthName", "MonthNameShort", each Date.ToText([Date], "MMM"), type text),
    #"COLUMN: QuarterNumber" = Table.AddColumn(#"COLUMN: MonthNameShort", "QuarterNumber", each Date.QuarterOfYear([Date])),
    #"COLUMN: Quarter" = Table.AddColumn(#"COLUMN: QuarterNumber", "Quarter", each Text.Combine({"Q", Text.From([QuarterNumber], "en-IN")}), type text),
    #"COLUMN YYYY QQ" = Table.AddColumn(#"COLUMN: Quarter", "YYYY QQ", each Text.Combine({Text.From([Year]), " Q", Text.From([QuarterNumber])})),
    #"COLUMN: YYYY-MM" = Table.AddColumn(#"COLUMN YYYY QQ", "YYYY-MM", each Text.Combine({Text.From([Year]), "-", Text.PadStart(Text.From([Month]), 2, "0")}), type text),
    #"COLUMN: YYYYMMDD" = Table.AddColumn(#"COLUMN: YYYY-MM", "YYYYMMDD", each Text.Combine({Text.From([Year]), Text.PadStart(Text.From([Month]), 2, "0"), Text.PadStart(Text.From([Day]), 2, "0")}), type text),
    #"COLUMN: WeekOfYear" = Table.AddColumn(#"COLUMN: YYYYMMDD", "WeekOfYear", each Date.WeekOfYear([Date])),
    #"TYPE: Adjustments" = Table.TransformColumnTypes(#"COLUMN: WeekOfYear",{{"Date", type date}, {"DateInteger", Int64.Type}})
in
    #"TYPE: Adjustments"